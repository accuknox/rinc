log:
  level: "info"  # possible values: "debug", "info", "warn", "error"
  format: "text" # possible values: "text", "json"
# sets the period after which the web server must be forcefully
# terminated. A value of 0 implies no forceful termination.
terminationGracePeriod: 10s
kubernetesClient:
  # inCluster, when set to true, attempts to authenticate with the API
  # server using a service account token.
  #
  # Either `inCluster` must be set to true or the path to a kubeconfig
  # file must be provided below.
  inCluster: false
  # Kubeconfig is the path to the `kubeconfig` file. This is useful when
  # running the application outside the cluster.
  #
  # Either `inCluster` must be set to true or the path to a kubeconfig
  # file must be provided here.
  kubeconfig: ""
mongodb:
  uri: ""
  username: ""
  password: ""
rabbitmq:
  # enable rabbitmq metrics and stats in the reports.
  enable: false
  # kubernetes headless fqdn address pointing to rabbitmq nodes. On a DNS
  # lookup, this address must resolve to rabbitmq node ips.
  #
  # For example: rabbitmq-nodes.default.svc.cluster.local
  headlessSvcAddr: ""
  management:
    # rabbitmq management url.
    #
    # For example: http://rabbitmq.default.svc.cluster.local:15672
    url: ""
    # basic auth username for the management api.
    username: ""
    # basic auth password for the management api.
    password: ""
  alerts:
    - message: RabbitMQ unacked messages exceeded 1000
      when: Overview.QueueTotals.UnacknowledgedMessages > 1000
      severity: warning
    - message: RabbitMQ ready messages exceeded 1000
      when: Overview.QueueTotals.ReadyMessages > 1000
      severity: warning
    - message: One or more rabbitmq nodes are down
      when: fieldsEq(Nodes, "Running", true) == false
      severity: critical
longRunningJobs:
  # enable long-running jobs reporting
  enable: false
  # namespace in which the long-running jobs will be reported. Leave blank for
  # all namespaces.
  namespace: ""
  # jobs older than this value will be reported.
  #
  # Eg: 12h, 30m, 5h30m15s
  olderThan: 24h
  # include long-running suspended jobs in reports
  includeSuspended: false
  alerts: []
imageTag:
  # enable image tag report
  enable: false
  # kubernetes namespace that the image tag reporter will be limited to.
  namespace: ""
  alerts: []
deploymentAndStatefulsetStatus:
  # enable deployment and statefulset status (DaSS) reporter
  enable: false
  # kubernetes namespace that the deployment and statefulset status (DaSS)
  # reporter will be limited to. Leave blank for all namespaces.
  namespace: ""
  alerts:
    - message: "CEPH S3 Object Gateway: one more pods are not ready"
      when: |-
        {
          "x": findOneRegex(findManyRegex(Deployments, "Namespace", "accuknox-ceph"), "Name", "s3")
        } |
        (x -> "ReadyReplicas") < (x -> "DesiredReplicas")
      severity: warning
    - message: "Metabase: one more pods are not ready"
      when: |-
        {
          "x": findOneRegex(Deployments, "Name", "^metabase$")
        } |
        (x -> "ReadyReplicas") < (x -> "DesiredReplicas")
      severity: warning
    - message: "Celery: one more pods are not ready"
      when: |-
        {
          "x": findOneRegex(Deployments, "Name", "^celery$")
        } |
        (x -> "ReadyReplicas") < (x -> "DesiredReplicas")
      severity: warning
    - message: "RabbitMQ: one more pods are not ready"
      when: |-
        {
          "x": findOneRegex(Statefulsets, "Name", "^rabbitmq-server$")
        } |
        (x -> "ReadyReplicas") < (x -> "DesiredReplicas")
      severity: warning
    - message: "MongoDB: one more pods are not up-to-date"
      when: |-
        {
          "x": findOneRegex(Statefulsets, "Name", "^accuknox-mongodb-rs0$")
        } |
        (x -> "UpdatedReplicas") < (x -> "ReadyReplicas")
      severity: warning
ceph:
  # enable ceph status reporter
  enable: false
  # ceph reporter uses ceph's dashboard API to scrape ceph status and metrics.
  dashboardAPI:
    # ceph dashboard url.
    #
    # For example: https://rook-ceph-mgr-dashboard.rook-ceph.svc.cluster.local:8443
    url: ""
    # username to authenticate with ceph dashboard API.
    username: ""
    # password to authenticate with ceph dashboard API.
    password: ""
  alerts:
    - message: Cluster is operating, but there are warnings that need attention
      when: Status.Health.Status == "HEALTH_WARN"
      severity: warning
    - message: Cluster has errors that may impact functionality
      when: Status.Health.Status == "HEALTH_ERR"
      severity: critical
    - message: Storage usage exceeded 70%
      when: (Status.DF.Stats.TotalUsedBytes * 100) / Status.DF.Stats.TotalBytes > 70
      severity: warning
    - message: Storage usage exceeded 90%
      when: (Status.DF.Stats.TotalUsedBytes * 100) / Status.DF.Stats.TotalBytes > 90
      severity: critical
    - message: One or more OSDs down
      when: sumUint(Status.OSDMap.OSDs, "Up") != len(Status.OSDMap.OSDs)
      severity: warning
    - message: All OSDs are down
      when: sumUint(Status.OSDMap.OSDs, "Up") == 0
      severity: critical
    - message: One or more OSDs are not part of data replication and recovery process
      when: sumUint(Status.OSDMap.OSDs, "In") != len(Status.OSDMap.OSDs)
      severity: warning
connectivity:
  vault:
    # enable vault connectivity check
    enable: false
    # vault address. E.g., http://accuknox-vault.accuknox-vault.svc.cluster.local:8200
    addr: ""
  mongodb:
    # enable mongodb connectivity check
    enable: false
    # mongodb connection uri.
    #
    # E.g., mongodb://accuknox-mongodb-rs0.accuknox-mongodb.svc.cluster.local:27017
    uri: ""
  neo4j:
    # enable neo4j connectivity check
    enable: false
    # neo4j connection URI
    #
    # E.g., neo4j://neo4j.accuknox-neo4j.svc.cluster.local:7687
    uri: ""
    # neo4j basic auth username
    username: ""
    # neo4j basic auth password
    password: ""
  postgres:
    # enable postgresql connectivity check
    enable: false
    # postgres server host (without the port)
    #
    # E.g., postgres-replicas.accuknox-postgresql.svc.cluster.local
    host: ""
    # postgresql server port.
    #
    # Default: 5432
    port: 5432
    # postgresql auth username.
    username: ""
    # postgresql auth password.
    password: ""
  redis:
    # enable redis connectivity check
    enable: false
    # redis/keydb address
    #
    # E.g., keydb-service.keydb.svc.cluster.local:6379
    addr: ""
  metabase:
    # enable metabase connectivity check
    enable: false
    # metabase base url
    #
    # E.g., http://metabase-service.metabase.svc.cluster.local
    baseUrl: ""
  alerts: []
    # - message: "Vault is not reachable"
    #   when: Vault.Reachable == false
    #   severity: critical
    # - message: "Vault is not initialized"
    #   when: Vault.Reachable && Vault.Initialized == false
    #   severity: warning
    # - message: "Vault is sealed"
    #   when: Vault.Reachable && Vault.Sealed
    #   severity: critical
    # - message: "MongoDB is not reachable"
    #   when: Mongodb.Reachable == false
    #   severity: critical
    # - message: "Neo4j is not reachable"
    #   when: Neo4j.Reachable == false
    #   severity: critical
    # - message: "Postgres is not reachable"
    #   when: Postgres.Reachable == false
    #   severity: critical
    # - message: "KeyDB is not reachable"
    #   when: Redis.Reachable == false
    #   severity: critical
    # - message: "Metabase is not healthy"
    #   when: Metabase.Healthy == false
    #   severity: critical
